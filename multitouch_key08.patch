diff -crB kernel.orig/drivers/input/touchscreen/key08.c kernel/drivers/input/touchscreen/key08.c
*** kernel.orig/drivers/input/touchscreen/key08.c	2011-09-11 19:33:14.853333345 +0800
--- kernel/drivers/input/touchscreen/key08.c	2010-11-27 19:34:45.986666679 +0800
***************
*** 42,47 ****
--- 42,48 ----
  #include <../board-mot.h>
  #endif
  
+ #define GOOGLE_MULTITOUCH 1
  
  #define	IRQ_REASON_IRQ		1
  #define	IRQ_REASON_SLIDER	2
***************
*** 941,946 ****
--- 942,954 ----
                          break;
                      }
  
+ #ifdef GOOGLE_MULTITOUCH
+ //FIXME: reboot sometimes when 3rd finger pressed ?
+ 		if (finger > 1)
+ 			break;
+ #endif
+ 
+ #ifndef GOOGLE_MULTITOUCH
                      if(buf[1] && (buf[0]&0x0f))
                      {
                          // touch
***************
*** 976,981 ****
--- 984,990 ----
                              break;
                          }
                      }
+ #endif
  
  
  
***************
*** 1034,1041 ****
--- 1043,1052 ----
  						}
  					}
  
+ #ifndef GOOGLE_MULTITOUCH
  					if ( needCalibration )
  						key08_calibrate(ts);
+ #endif						
  					needCalibration = FALSE;						
  						base = 2;
  #ifdef CONFIG_MACH_MOT
***************
*** 1043,1048 ****
--- 1054,1060 ----
  					y = Q51001211009AK08_TS_MAX_Y - y;
  #endif
  
+ #ifndef GOOGLE_MULTITOUCH
  						pos[0][0] = x;
  						pos[0][1] = y;
  						
***************
*** 1086,1091 ****
--- 1098,1130 ----
  								prevX = x;
  								prevY = y;
  							}
+ #else
+ 					currPoints[finger].X = x;
+ 					currPoints[finger].Y = y;
+ 					currPoints[finger].W = w;
+ 					//get Z from tf[]
+ 					if (!ts->suspendMode)
+ 					{
+ 						for (i = 0; i < 2; i ++)
+ 						{
+ 							KEY08_PRINTK("%s: i=%d, x=%d, y=%d, z=%d", __FUNCTION__, i, currPoints[i].X, currPoints[i].Y, tf[i] ? 1 : 0);
+ 							input_report_abs(ts->input_dev, ABS_MT_TOUCH_MAJOR, tf[i] ? 1 : 0);
+ 							tims[tIndex++] = ktime_get();
+ 							input_report_abs(ts->input_dev, ABS_MT_WIDTH_MAJOR, currPoints[i].W);
+ 							tims[tIndex++] = ktime_get();
+ 							input_report_abs(ts->input_dev, ABS_MT_POSITION_X, currPoints[i].X);
+ 							tims[tIndex++] = ktime_get();
+ 							input_report_abs(ts->input_dev, ABS_MT_POSITION_Y, currPoints[i].Y);
+ 							tims[tIndex++] = ktime_get();
+ 							input_mt_sync(ts->input_dev);
+ 							tims[tIndex++] = ktime_get();
+ 						}
+ 						input_sync(ts->input_dev);
+ 						tims[tIndex++] = ktime_get();
+ 					}
+ #endif			
+ 
+ 							
  					need2sendRelease = FALSE;
  						snprintf(dbgBuffer,DBG_BUFFER_SIZE-1,"%s: times: ", __FUNCTION__ );
  						tIndex--;
***************
*** 1495,1501 ****
  		inactive_area_top =0;
  		inactive_area_right=0;
  		inactive_area_bottom=0;
! 			
  		input_set_abs_params(tsGl->input_dev, ABS_X, 2, SCREEN_X, 0, 0);
  		input_set_abs_params(tsGl->input_dev, ABS_Y, 0, SCREEN_Y, 0, 0);
  		
--- 1534,1541 ----
  		inactive_area_top =0;
  		inactive_area_right=0;
  		inactive_area_bottom=0;
! 
! #ifndef GOOGLE_MULTITOUCH			
  		input_set_abs_params(tsGl->input_dev, ABS_X, 2, SCREEN_X, 0, 0);
  		input_set_abs_params(tsGl->input_dev, ABS_Y, 0, SCREEN_Y, 0, 0);
  		
***************
*** 1503,1508 ****
--- 1543,1554 ----
  		input_set_abs_params(tsGl->input_dev, ABS_TOOL_WIDTH, 0, 0xf, 2, 0);
  		input_set_abs_params(tsGl->input_dev, ABS_HAT0X, 0, 0xfff, 2, 0);
  		input_set_abs_params(tsGl->input_dev, ABS_HAT0Y, 0, 0xfff, 2, 0);
+ #else // copy from qtm_obp_ts.c
+ 		input_set_abs_params(tsGl->input_dev, ABS_MT_POSITION_X, 0, 1023, 0, 0);
+ 		input_set_abs_params(tsGl->input_dev, ABS_MT_POSITION_Y, 0, 1023, 0, 0);
+ 		input_set_abs_params(tsGl->input_dev, ABS_MT_TOUCH_MAJOR, 0, 255, 0, 0);
+ 		input_set_abs_params(tsGl->input_dev, ABS_MT_WIDTH_MAJOR, 0, 15, 0, 0);
+ #endif		
  		/* tsGl->input_dev->name = tsGl->keypad_info->name; */
  
  		ret = input_register_handler(&slider_handler);
